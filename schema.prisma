generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  name          String
  passwordHash  String
  role          UserRole       @default(ADMIN)
  aktionen      Aktion[]       @relation("AdminAktionen")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([email])
}

model Aktion {
  id            String         @id @default(cuid())
  titel         String
  startdatum    DateTime
  enddatum      DateTime
  status        AktionStatus   @default(AKTIV)
  adminId       String
  admin         User           @relation("AdminAktionen", fields: [adminId], references: [id])
  abrechnungen  Abrechnung[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([status, startdatum])
  @@index([adminId])
}

model Abrechnung {
  id                String          @id @default(cuid())
  aktionId          String
  aktion            Aktion          @relation(fields: [aktionId], references: [id], onDelete: Cascade)
  name              String
  stammGruppe       String
  email             String
  kategorie         Kategorie
  betrag            Float
  beschreibung      String?
  belegdatum        DateTime
  belegUrl          String?
  fahrzeugtyp       Fahrzeugtyp?
  anzahlMitfahrer   Int?
  kilometerstand    Float?
  zuschlaege        String[]        @default([])
  status            AbrechnungStatus @default(ENTWURF)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  @@index([aktionId, status])
  @@index([kategorie])
}

enum UserRole {
  ADMIN
  LANDESKASSE
}

enum AktionStatus {
  AKTIV
  INAKTIV
  ABGESCHLOSSEN
}

enum AbrechnungStatus {
  ENTWURF
  EINGEREICHT
  VERSENDET
  ABGELEHNT
}

enum Kategorie {
  TEILNAHMEBEITRAEGE
  FAHRTKOSTEN
  UNTERKUNFT
  VERPFLEGUNG
  MATERIAL
  PORTO
  TELEKOMMUNIKATION
  SONSTIGE
}

enum Fahrzeugtyp {
  PKW
  MOTORRAD
  FAHRRAD
  OEFFENTLICH
}
